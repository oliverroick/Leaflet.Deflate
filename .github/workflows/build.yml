name: "Build"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  NODE: 16

jobs:
  prep:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node ${{ env.NODE }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE }}

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}

      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: prep
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup node ${{ env.NODE }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE }}
    - name: Cache node modules
      id: cache-node-modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          node_modules
          /home/runner/.cache/Cypress
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci
    - name: test
      run: npm test
      env:
        CI: true
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: prep
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup node ${{ env.NODE }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE }}
    - name: Cache node modules
      id: cache-node-modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          node_modules
          /home/runner/.cache/Cypress
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci
    - name: lint
      run: npm run lint
      env:
        CI: true
  typescript:
    name: TypeScript compile
    runs-on: ubuntu-latest
    needs: prep
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup node ${{ env.NODE }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE }}
    - name: Cache node modules
      id: cache-node-modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          node_modules
          /home/runner/.cache/Cypress
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci
    - name: lint
      run: tsc
      env:
        CI: true
  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    needs: prep
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup node ${{ env.NODE }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE }}
    - name: Cache node modules
      id: cache-node-modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: |
          node_modules
          /home/runner/.cache/Cypress
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci
    - name: build and test
      run: |
        npm run dist
        TARGET=dist npm test
      env:
        CI: true